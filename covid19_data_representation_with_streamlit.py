# -*- coding: utf-8 -*-
"""Covid19 Data Representation with Streamlit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rv9GMryTWTnmxhgRpLsgjrY-_MsV5b7x

# COVID-19 Data Representation - Parsing - Streamlit - Python


*   Author: Purva Natoo

##### Install required libraries
"""

!pip install streamlit
!pip install pyngrok==4.1.1
!pip install requests
!pip install json

import requests
import json

DATA_URL=('https://covidtracking.com/api/states')


def getData():
  data = requests.get(DATA_URL)
  return data.text
  
covid_data = getData()
json_data = json.loads(covid_data)
print(json_data)

states = []
for i in json_data:
  states.append(i['state'])

print(states)
select = "AK"

for i in range(len(json_data)):
  if json_data[i]['state'] == select:
    state_data = json_data[i]
    break

state_data = json_data[states == select]
print(state_data)

# Commented out IPython magic to ensure Python compatibility.
# %%writefile Covid_Data_Representation.py
# import streamlit as st
# import pandas as pd
# import numpy as np
# import plotly.express as px
# import requests
# import json
# 
# DATA_URL=('https://covidtracking.com/api/states')
# @st.cache(persist=True)
# 
# def getData():
#   data = requests.get(DATA_URL)
#   return data.text
#   
# covid_data = getData()
# json_data = json.loads(covid_data)
# 
# states = []
# for i in json_data:
#   states.append(i['state'])
# 
# select = st.sidebar.selectbox('Select a State',states)
# 
# #get the state selected in the selectbox
# for i in range(len(json_data)):
#   if json_data[i]['state'] == select:
#     state_data = json_data[i]
#     break
# 
# state_data = json_data[states == select]
# 
# def get_total_dataframe(dataset):
#     total_dataframe = pd.DataFrame({
#     'Status':['Positive', 'Hospitalised', 'Recovered', 'Deceased'],
#     'Number of cases':(state_data['positive'],
#     state_data['hospitalized'], 
#     state_data['hospitalizedDischarged'],state_data['death'])})
#     return total_dataframe
# 
# state_total = get_total_dataframe(state_data)
# 
# 
# st.markdown("## **State level analysis**")
# st.markdown("#### Overall Positive, Hospitalised, Recovered and " +
# "Deceased cases in %s yet" % (select))
# if not st.checkbox('Hide Graph', False, key=1):
#   state_total_graph = px.bar(
#   state_total, 
#   x='Status',
#   y='Number of cases',
#   labels={'Number of cases':'Number of cases in %s' % (select)},
#   color='Status')
#   st.plotly_chart(state_total_graph)

!ls

!ngrok authtoken 23f1xaM2OfDSFHoV7FQTQrXiZW7_6bHuFoNtq5BaZQh9vp4p8

!streamlit run Covid_Data_Representation.py &>/dev/null&

!pgrep streamlit
#!ps -eaf | grep streamlit

from pyngrok import ngrok
# Setup a tunnel to the streamlit port 8501
public_url = ngrok.connect(port='8501')
public_url

!pgrep streamlit
#!ps -eaf | grep streamlit

!kill 828

ngrok.kill()